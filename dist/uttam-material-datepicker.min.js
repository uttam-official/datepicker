var m=class{constructor(s,t,e={}){this.element=s,this.inputEl=t,this.options=e,this.date=e.initDate?new Date(e.initDate):new Date,this.view="days",this.minDate=e.minDate?new Date(e.minDate):null,this.maxDate=e.maxDate?new Date(e.maxDate):null,this.format=e.format||"d-m-Y",this.init()}init(){this.render(),this.attachEvents()}render(){this.element.innerHTML=`
        <div class="uttam-mdp">
            <div class="mdp-container">
                <div class="mdp-header">
                    <div class="mdp-nav mdp-prev">
                    <svg xmlns="http://www.w3.org/2000/svg" width="7.4985" height="12.557" viewBox="0 0 4.999 8.371" fill="white">
                        <path id="angle-left-svgrepo-com" d="M13.75,16.25a.74.74,0,0,1-.53-.22l-3.5-3.5a.75.75,0,0,1,0-1.06L13.22,8a.75.75,0,0,1,1.06,1l-3,3,3,3a.75.75,0,0,1,0,1.06A.74.74,0,0,1,13.75,16.25Z" transform="translate(-9.501 -7.879)"/>
                    </svg>
                    </div>
                    <div class="mdp-title">${this.getHeaderTitle()}</div>
                    <div class="mdp-nav mdp-next">
                    <svg xmlns="http://www.w3.org/2000/svg" width="7.4985" height="12.519" viewBox="0 0 4.999 8.346" fill="white">
                        <path id="angle-right-svgrepo-com" d="M10.25,16.25A.74.74,0,0,1,9.72,16a.75.75,0,0,1,0-1.06l3-3-3-3A.75.75,0,0,1,10.78,8l3.5,3.5a.75.75,0,0,1,0,1.06L10.78,16a.74.74,0,0,1-.53.25Z" transform="translate(-9.501 -7.904)"/>
                    </svg>
                    </div>
                </div>
                <div class="mdp-body">${this.renderBody()}</div>
            </div>
        </div>`}getHeaderTitle(){let s=["January","February","March","April","May","June","July","August","September","October","November","December"];if(this.view==="days")return`${s[this.date.getMonth()]} ${this.date.getFullYear()}`;if(this.view==="months")return this.date.getFullYear();let t=Math.floor(this.date.getFullYear()/12)*12;return`${t} - ${t+11}`}renderBody(){return this.view==="days"?this.renderDays():this.view==="months"?this.renderMonths():this.renderYears()}renderDays(){let s=this.date.getFullYear(),t=this.date.getMonth(),e=new Date(s,t,1).getDay(),l=new Date(s,t+1,0).getDate(),a='<div class="mdp-grid">';a+=["Su","Mo","Tu","We","Th","Fr","Sa"].map(i=>`<div class="mdp-day-header">${i}</div>`).join("");for(let i=0;i<e;i++)a+="<div></div>";let h=this.inputEl.value?new Date(this.inputEl.value.split(/[-\/]/).reverse().join("-")):null;for(let i=1;i<=l;i++){let n=new Date(s,t,i),d=!1,c=!1,r=!1;this.minDate&&n<this.minDate&&(d=!0),this.maxDate&&n>this.maxDate&&(d=!0),h&&n.toDateString()===h.toDateString()&&(c=!0),n.toDateString()===new Date().toDateString()&&(r=!0),a+=`<div class="mdp-day${d?" disabled":""}${c?" selected":""}${r?" today":""}" data-day="${i}">${i}</div>`}return a+="</div>",a}renderMonths(){return`<div class="mdp-grid mdp-months">
            ${["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"].map((t,e)=>`<div class="mdp-month" data-month="${e}">${t}</div>`).join("")}
        </div>`}renderYears(){let s=Math.floor(this.date.getFullYear()/12)*12;return`<div class="mdp-grid mdp-years">
            ${Array.from({length:12},(t,e)=>`<div class="mdp-year" data-year="${s+e}">${s+e}</div>`).join("")}
        </div>`}attachEvents(){let s=this.element.querySelector(".mdp-prev"),t=this.element.querySelector(".mdp-next"),e=this.element.querySelector(".mdp-title"),l=this.element.querySelector(".mdp-body");s.addEventListener("click",a=>{a.stopPropagation(),this.navigate(-1)}),t.addEventListener("click",a=>{a.stopPropagation(),this.navigate(1)}),e.addEventListener("click",a=>{a.stopPropagation(),this.view=this.view==="days"?"months":this.view==="months"?"years":"days",this.render(),this.attachEvents()}),l.addEventListener("click",a=>{if(a.stopPropagation(),!a.target.classList.contains("disabled"))if(a.target.classList.contains("mdp-day")){let o=a.target.dataset.day,h=new Date(this.date.getFullYear(),this.date.getMonth(),o);this.inputEl.value=this.formatDate(h),this.close()}else a.target.classList.contains("mdp-month")?(this.date.setMonth(a.target.dataset.month),this.view="days",this.render(),this.attachEvents()):a.target.classList.contains("mdp-year")&&(this.date.setFullYear(a.target.dataset.year),this.view="months",this.render(),this.attachEvents())})}navigate(s){this.view==="days"?this.date.setMonth(this.date.getMonth()+s):this.view==="months"?this.date.setFullYear(this.date.getFullYear()+s):this.view==="years"&&this.date.setFullYear(this.date.getFullYear()+s*12),this.render(),this.attachEvents()}formatDate(s){let t=String(s.getDate()).padStart(2,"0"),e=String(s.getMonth()+1).padStart(2,"0"),l=s.getFullYear();return this.format.replace("d",t).replace("m",e).replace("Y",l)}close(){this.element.style.display="none"}};function w(p=".datepicker",s={}){let t=document.createElement("div");t.id="uttam-mdp-popup",t.style.position="absolute",t.style.zIndex="9999",t.style.display="none",document.body.appendChild(t),document.querySelectorAll(p).forEach(e=>{e.addEventListener("focus",l=>{let a=e.getBoundingClientRect();t.style.display="block",t.innerHTML="",new m(t,e,s);let o=t.offsetHeight||350;t.style.display="none";let h=window.innerHeight-a.bottom,i=a.top,n;h<o&&i>o?n=a.top+window.scrollY-o-8:n=a.bottom+window.scrollY+5,t.style.display="block",t.style.top=n+"px",t.style.left=a.left+"px";let d=t.getBoundingClientRect();d.right>window.innerWidth?t.style.left=window.innerWidth-d.width-10+"px":d.left<0&&(t.style.left="10px");let c=new Date;if(e.value){let r=e.value.split(/[-\/]/);if(r.length===3){let y=parseInt(r[0],10),g=parseInt(r[1],10)-1,u=parseInt(r[2],10),v=new Date(u,g,y);isNaN(v)||(c=v)}}new m(t,e,{...s,initDate:c})})}),document.addEventListener("click",e=>{!t.contains(e.target)&&!e.target.matches(p)&&(t.style.display="none")})}typeof window<"u"&&(window.initDatepicker=w);export{w as initDatepicker};
