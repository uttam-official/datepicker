var m=class{constructor(a,e,t={}){this.element=a,this.inputEl=e,this.options=t,this.date=t.initDate?new Date(t.initDate):new Date,this.view="days",this.minDate=t.minDate?new Date(t.minDate):null,this.maxDate=t.maxDate?new Date(t.maxDate):null,this.format=t.format||"d-m-Y",this.init()}init(){this.render(),this.attachEvents()}render(){this.element.innerHTML=`
        <div class="uttam-mdp">
            <div class="mdp-container">
                <div class="mdp-header">
                    <div class="mdp-nav mdp-prev">
                    <svg xmlns="http://www.w3.org/2000/svg" width="7.4985" height="12.557" viewBox="0 0 4.999 8.371" fill="white">
                        <path id="angle-left-svgrepo-com" d="M13.75,16.25a.74.74,0,0,1-.53-.22l-3.5-3.5a.75.75,0,0,1,0-1.06L13.22,8a.75.75,0,0,1,1.06,1l-3,3,3,3a.75.75,0,0,1,0,1.06A.74.74,0,0,1,13.75,16.25Z" transform="translate(-9.501 -7.879)"/>
                    </svg>
                    </div>
                    <div class="mdp-title">${this.getHeaderTitle()}</div>
                    <div class="mdp-nav mdp-next">
                    <svg xmlns="http://www.w3.org/2000/svg" width="7.4985" height="12.519" viewBox="0 0 4.999 8.346" fill="white">
                        <path id="angle-right-svgrepo-com" d="M10.25,16.25A.74.74,0,0,1,9.72,16a.75.75,0,0,1,0-1.06l3-3-3-3A.75.75,0,0,1,10.78,8l3.5,3.5a.75.75,0,0,1,0,1.06L10.78,16a.74.74,0,0,1-.53.25Z" transform="translate(-9.501 -7.904)"/>
                    </svg>
                    </div>
                </div>
                <div class="mdp-body">${this.renderBody()}</div>
            </div>
        </div>`}getHeaderTitle(){let a=["January","February","March","April","May","June","July","August","September","October","November","December"];if(this.view==="days")return`${a[this.date.getMonth()]} ${this.date.getFullYear()}`;if(this.view==="months")return this.date.getFullYear();let e=Math.floor(this.date.getFullYear()/12)*12;return`${e} - ${e+11}`}renderBody(){return this.view==="days"?this.renderDays():this.view==="months"?this.renderMonths():this.renderYears()}renderDays(){let a=this.date.getFullYear(),e=this.date.getMonth(),t=new Date(a,e,1).getDay(),r=new Date(a,e+1,0).getDate(),s='<div class="mdp-grid">';s+=["Su","Mo","Tu","We","Th","Fr","Sa"].map(i=>`<div class="mdp-day-header">${i}</div>`).join("");for(let i=0;i<t;i++)s+="<div></div>";let n=this.inputEl.value?new Date(this.inputEl.value.split(/[-\/]/).reverse().join("-")):null;for(let i=1;i<=r;i++){let d=new Date(a,e,i),o=!1,h=!1,v=!1;this.minDate&&d<this.minDate&&(o=!0),this.maxDate&&d>this.maxDate&&(o=!0),n&&d.toDateString()===n.toDateString()&&(h=!0),d.toDateString()===new Date().toDateString()&&(v=!0),s+=`<div class="mdp-day${o?" disabled":""}${h?" selected":""}${v?" today":""}" data-day="${i}">${i}</div>`}return s+="</div>",s}renderMonths(){return`<div class="mdp-grid mdp-months">
            ${["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"].map((e,t)=>`<div class="mdp-month" data-month="${t}">${e}</div>`).join("")}
        </div>`}renderYears(){let a=Math.floor(this.date.getFullYear()/12)*12;return`<div class="mdp-grid mdp-years">
            ${Array.from({length:12},(e,t)=>`<div class="mdp-year" data-year="${a+t}">${a+t}</div>`).join("")}
        </div>`}attachEvents(){let a=this.element.querySelector(".mdp-prev"),e=this.element.querySelector(".mdp-next"),t=this.element.querySelector(".mdp-title"),r=this.element.querySelector(".mdp-body");a.addEventListener("click",s=>{s.stopPropagation(),this.navigate(-1)}),e.addEventListener("click",s=>{s.stopPropagation(),this.navigate(1)}),t.addEventListener("click",s=>{s.stopPropagation(),this.view=this.view==="days"?"months":this.view==="months"?"years":"days",this.render(),this.attachEvents()}),r.addEventListener("click",s=>{if(s.stopPropagation(),!s.target.classList.contains("disabled"))if(s.target.classList.contains("mdp-day")){let l=s.target.dataset.day,n=new Date(this.date.getFullYear(),this.date.getMonth(),l);this.inputEl.value=this.formatDate(n),this.close()}else s.target.classList.contains("mdp-month")?(this.date.setMonth(s.target.dataset.month),this.view="days",this.render(),this.attachEvents()):s.target.classList.contains("mdp-year")&&(this.date.setFullYear(s.target.dataset.year),this.view="months",this.render(),this.attachEvents())})}navigate(a){this.view==="days"?this.date.setMonth(this.date.getMonth()+a):this.view==="months"?this.date.setFullYear(this.date.getFullYear()+a):this.view==="years"&&this.date.setFullYear(this.date.getFullYear()+a*12),this.render(),this.attachEvents()}formatDate(a){let e=String(a.getDate()).padStart(2,"0"),t=String(a.getMonth()+1).padStart(2,"0"),r=a.getFullYear();return this.format.replace("d",e).replace("m",t).replace("Y",r)}close(){this.element.style.display="none"}};function p(c=".datepicker",a={}){let e=document.createElement("div");e.id="uttam-mdp-popup",e.style.position="absolute",e.style.zIndex="9999",e.style.display="none",document.body.appendChild(e),document.querySelectorAll(c).forEach(t=>{t.addEventListener("focus",r=>{let s=t.getBoundingClientRect();e.style.display="block",e.style.top=s.bottom+window.scrollY+"px",e.style.left=s.left+"px";let l=new Date;if(t.value){let n=t.value.split(/[-\/]/);if(n.length===3){let i=parseInt(n[0],10),d=parseInt(n[1],10)-1,o=parseInt(n[2],10),h=new Date(o,d,i);isNaN(h)||(l=h)}}new m(e,t,{...a,initDate:l})})}),document.addEventListener("click",t=>{!e.contains(t.target)&&!t.target.matches(c)&&(e.style.display="none")})}typeof window<"u"&&(window.initDatepicker=p);export{p as initDatepicker};
